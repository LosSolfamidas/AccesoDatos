package Vista;

import Controlador.Metodos;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import Objetos.Persona;
import Objetos.Vivienda;
import java.awt.Color;

public final class PersonaGestionar extends javax.swing.JDialog implements TableModelListener {

    static Persona personaSeleccionada;
    static ArrayList<Persona> listaTotalPersonas;

    static Vivienda editarVivienda;
    public static boolean actualizar = false;
    boolean inicio = true;
    boolean buscar = false;
    boolean reg = false;

    public PersonaGestionar(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargarTabla();
    }

    public void cargarTabla() {
        
        txtNombreInsert.setText("");
        txtApellidosInsert.setText("");
        txtTelefonoInsert.setText("");
        txtNombreUpdate.setText("");
        txtApellidosUpdate.setText("");
        txtTelefonoUpdate.setText("");
        txtBuscar.setText("");
        
        if (!buscar) {
            listaTotalPersonas = Metodos.totalPersonasSELECT();
        }

        MiModelodeTabla miTabla = new MiModelodeTabla();

        String fila[] = new String[5];
        Iterator<Persona> i = listaTotalPersonas.iterator();
        while (i.hasNext()) {
            Persona per = i.next();
            fila[0] = String.valueOf(per.getID_Persona());
            fila[1] = per.getNombre();
            fila[2] = per.getApellidos();
            fila[3] = String.valueOf(per.getAnyoNacimiento());
            fila[4] = per.getNumTelefono();
            System.out.println("ID:" + per.getID_Persona() + "   Registrada: " + per.isRegistrada());

            miTabla.addRow(fila);
        }

        // Asigno los valores a la tabla y así la inicializa sólo con los datos leídos
        tablaPersonas.setModel(miTabla);

        //Añade un listener para eventos sobre la tabla
        tablaPersonas.getModel().addTableModelListener(this);
        buscar = false;
    }

    public class MiModelodeTabla extends DefaultTableModel {

        @Override
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }

        //Extiendo la funcionalidad del DefaultTableModel para indicar los tipos de cada celda
        @Override
        public Class getColumnClass(int columna) {
            return String.class;
        }

        //Sobre-escribo los nombres de las columnas
        String nombresColumnas[] = {"ID", "Nombre", "Apellidos", "Año Nacimiento", "Teléfono"};

        @Override
        public String getColumnName(int index) {
            return nombresColumnas[index];
        }

        @Override
        public int getColumnCount() {
            return nombresColumnas.length;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGeneral = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersonas = new javax.swing.JTable();
        labelTitulo = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        labelTitulo1 = new javax.swing.JLabel();
        labelTitulo2 = new javax.swing.JLabel();
        btnRefrescar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtNombreUpdate = new javax.swing.JTextField();
        txtApellidosUpdate = new javax.swing.JTextField();
        txtTelefonoUpdate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreInsert = new javax.swing.JTextField();
        txtApellidosInsert = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTelefonoInsert = new javax.swing.JTextField();
        btnActualizarPersona = new javax.swing.JButton();
        btnInsertarPersona = new javax.swing.JButton();
        spnNacimientoInsert = new javax.swing.JSpinner();
        spnNacimientoUpdate = new javax.swing.JSpinner();
        btnIrGestionViviendas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(" -- GESTIÓN DE PERSONAS --");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        tablaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPersonas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaPersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPersonasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPersonas);

        labelTitulo.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        labelTitulo.setText("-- EDITAR --");

        btnEliminar.setFont(new java.awt.Font("DialogInput", 3, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Delete.png"))); // NOI18N
        btnEliminar.setText("Eliminar Persona");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("DialogInput", 3, 14)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Salir.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        labelTitulo1.setFont(new java.awt.Font("DialogInput", 3, 24)); // NOI18N
        labelTitulo1.setText("-- GESTIÓN DE PERSONAS --");

        labelTitulo2.setFont(new java.awt.Font("DialogInput", 3, 18)); // NOI18N
        labelTitulo2.setText("-- INSERTAR --");

        btnRefrescar.setFont(new java.awt.Font("DialogInput", 3, 14)); // NOI18N
        btnRefrescar.setIcon(new javax.swing.ImageIcon("C:\\Users\\crone\\Desktop\\AccesoDatos\\CatastroNeodatis\\src\\Images\\refresh.gif")); // NOI18N
        btnRefrescar.setText("Recargar Tabla");
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });

        txtBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBuscarFocusLost(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("DialogInput", 3, 14)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lupa_buscar.png"))); // NOI18N
        btnBuscar.setText("Buscar por Nombre");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtNombreUpdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreUpdateFocusLost(evt);
            }
        });
        txtNombreUpdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreUpdateKeyTyped(evt);
            }
        });

        txtApellidosUpdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidosUpdateFocusLost(evt);
            }
        });
        txtApellidosUpdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosUpdateKeyTyped(evt);
            }
        });

        txtTelefonoUpdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoUpdateFocusLost(evt);
            }
        });
        txtTelefonoUpdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoUpdateKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel1.setText("Nombre:");

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel2.setText("Apellidos:");

        jLabel3.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel3.setText("Año Nacimiento:");

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel4.setText("Teléfono:");

        jLabel5.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel5.setText("Télefono:");

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel6.setText("Nombre:");

        txtNombreInsert.setBackground(new java.awt.Color(204, 255, 255));
        txtNombreInsert.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreInsertFocusLost(evt);
            }
        });
        txtNombreInsert.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreInsertKeyTyped(evt);
            }
        });

        txtApellidosInsert.setBackground(new java.awt.Color(204, 255, 255));
        txtApellidosInsert.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidosInsertFocusLost(evt);
            }
        });
        txtApellidosInsert.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosInsertKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel7.setText("Apellidos:");

        jLabel8.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        jLabel8.setText("Año Nacimiento:");

        txtTelefonoInsert.setBackground(new java.awt.Color(204, 255, 255));
        txtTelefonoInsert.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoInsertFocusLost(evt);
            }
        });
        txtTelefonoInsert.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoInsertKeyTyped(evt);
            }
        });

        btnActualizarPersona.setFont(new java.awt.Font("DialogInput", 3, 14)); // NOI18N
        btnActualizarPersona.setText("Aceptar");
        btnActualizarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarPersonaActionPerformed(evt);
            }
        });

        btnInsertarPersona.setFont(new java.awt.Font("DialogInput", 3, 14)); // NOI18N
        btnInsertarPersona.setText("Aceptar");
        btnInsertarPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarPersonaActionPerformed(evt);
            }
        });

        spnNacimientoInsert.setModel(new javax.swing.SpinnerNumberModel(1900, 1900, 2016, 1));
        spnNacimientoInsert.setEditor(new javax.swing.JSpinner.NumberEditor(spnNacimientoInsert, ""));
        spnNacimientoInsert.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spnNacimientoInsertKeyTyped(evt);
            }
        });

        spnNacimientoUpdate.setModel(new javax.swing.SpinnerNumberModel(1900, 1900, 2016, 1));
        spnNacimientoUpdate.setEditor(new javax.swing.JSpinner.NumberEditor(spnNacimientoUpdate, ""));
        spnNacimientoUpdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spnNacimientoUpdateKeyTyped(evt);
            }
        });

        btnIrGestionViviendas.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btnIrGestionViviendas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        btnIrGestionViviendas.setText("Ir a Gestión de Viviendas");
        btnIrGestionViviendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrGestionViviendasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGeneralLayout = new javax.swing.GroupLayout(panelGeneral);
        panelGeneral.setLayout(panelGeneralLayout);
        panelGeneralLayout.setHorizontalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIrGestionViviendas)
                .addGap(75, 75, 75)
                .addComponent(labelTitulo1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelGeneralLayout.createSequentialGroup()
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelGeneralLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(134, 134, 134)
                        .addComponent(btnSalir))
                    .addGroup(panelGeneralLayout.createSequentialGroup()
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelGeneralLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(panelGeneralLayout.createSequentialGroup()
                                            .addComponent(jLabel8)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(spnNacimientoInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelGeneralLayout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(txtNombreInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelGeneralLayout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtTelefonoInsert)))
                                    .addGroup(panelGeneralLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtApellidosInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnInsertarPersona, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(panelGeneralLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(labelTitulo2)))
                        .addGap(18, 18, 18)
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelGeneralLayout.createSequentialGroup()
                                .addComponent(btnRefrescar)
                                .addGap(193, 193, 193)
                                .addComponent(btnEliminar)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGeneralLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelGeneralLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTelefonoUpdate))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGeneralLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(spnNacimientoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelGeneralLayout.createSequentialGroup()
                                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtApellidosUpdate)
                                    .addComponent(txtNombreUpdate)))
                            .addGroup(panelGeneralLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnActualizarPersona)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGeneralLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTitulo)
                        .addGap(44, 44, 44))))
        );
        panelGeneralLayout.setVerticalGroup(
            panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTitulo1)
                    .addComponent(btnIrGestionViviendas))
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGeneralLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnRefrescar)
                                .addComponent(labelTitulo2))
                            .addComponent(btnEliminar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelGeneralLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTitulo)
                        .addGap(8, 8, 8)))
                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelGeneralLayout.createSequentialGroup()
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombreUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtApellidosUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(31, 31, 31)
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(spnNacimientoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefonoUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(22, 22, 22)
                        .addComponent(btnActualizarPersona))
                    .addGroup(panelGeneralLayout.createSequentialGroup()
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelGeneralLayout.createSequentialGroup()
                                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNombreInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(26, 26, 26)
                                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtApellidosInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(31, 31, 31)
                                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(spnNacimientoInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTelefonoInsert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(21, 21, 21)
                                .addComponent(btnInsertarPersona)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int index = tablaPersonas.getSelectedRow();

        if (index != -1) {
            Persona persona = listaTotalPersonas.get(index);
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Desea Eliminar esta Persona?", "Borrar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (respuesta == JOptionPane.YES_OPTION) {
                //if (Metodos.personaDELETE(personaSeleccionada.getID_Persona())) {
                if (Metodos.personaDELETE(persona)) {
                    cargarTabla();
                    tablaPersonas.repaint();
                    JOptionPane.showMessageDialog(this, "Se ha eliminado Correctamente.");
                } else {
                    JOptionPane.showMessageDialog(this, "Error al Borrar.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debes elegir una Persona.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        if (actualizar == true) {
            cargarTabla();
            tablaPersonas.repaint();
            actualizar = false;
        }

        if (inicio == true) {
            inicio = false;
            if (listaTotalPersonas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No existen Personas", "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_formWindowActivated

    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        cargarTabla();
    }//GEN-LAST:event_btnRefrescarActionPerformed

    private void txtNombreInsertFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreInsertFocusLost
        if ((txtNombreInsert.getText().length() > 25) || (txtNombreInsert.getText().length() == 0)) {
            txtNombreInsert.setBackground(Color.LIGHT_GRAY);
        } else {
            txtNombreInsert.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtNombreInsertFocusLost

    private void txtApellidosInsertFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidosInsertFocusLost
        if ((txtApellidosInsert.getText().length() > 50) || (txtApellidosInsert.getText().length() == 0)) {
            txtApellidosInsert.setBackground(Color.LIGHT_GRAY);
        } else {
            txtApellidosInsert.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtApellidosInsertFocusLost

    private void txtTelefonoInsertFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoInsertFocusLost
        if (((txtTelefonoInsert.getText().length() != 9))) {
            txtTelefonoInsert.setBackground(Color.LIGHT_GRAY);

        } else {
            txtTelefonoInsert.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtTelefonoInsertFocusLost

    private void txtNombreUpdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreUpdateFocusLost
        if ((txtNombreUpdate.getText().length() > 25) || (txtNombreUpdate.getText().length() == 0)) {
            txtNombreUpdate.setBackground(Color.LIGHT_GRAY);
        } else {
            txtNombreUpdate.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtNombreUpdateFocusLost

    private void txtApellidosUpdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidosUpdateFocusLost
        if ((txtApellidosUpdate.getText().length() > 50) || (txtApellidosUpdate.getText().length() == 0)) {
            txtApellidosUpdate.setBackground(Color.LIGHT_GRAY);
        } else {
            txtApellidosUpdate.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtApellidosUpdateFocusLost

    private void txtTelefonoUpdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoUpdateFocusLost
        if ((txtTelefonoUpdate.getText().length() != 9)) {
            txtTelefonoUpdate.setBackground(Color.LIGHT_GRAY);
        } else {
            txtTelefonoUpdate.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtTelefonoUpdateFocusLost

    private void btnInsertarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarPersonaActionPerformed
        if (validarDatosInsert() == true) {
            String Nombre = txtNombreInsert.getText().toUpperCase();
            String Apellidos = txtApellidosInsert.getText().toUpperCase();
            int nacimiento = (int) spnNacimientoInsert.getValue();
            String numTelefono = txtTelefonoInsert.getText().toUpperCase();
            boolean registrada = false;

            int respuesta = JOptionPane.showConfirmDialog(null, "¿Registrar Persona?", "Nueva alta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (respuesta == JOptionPane.YES_OPTION) {
                BaseDatosINSERT(Nombre, Apellidos, nacimiento, numTelefono, registrada);
            }
        }
    }//GEN-LAST:event_btnInsertarPersonaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String Nombre = txtBuscar.getText();

        if (Nombre.isEmpty() || Nombre.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Introduzca Nombre", "Error al Buscar", JOptionPane.INFORMATION_MESSAGE);
        } else {
            listaTotalPersonas = Metodos.personaBUSQUEDA(Nombre);
            buscar = true;
            cargarTabla();
            listaTotalPersonas = Metodos.totalPersonasSELECT();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaPersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPersonasMouseClicked
        mostrarCamposUpdate();
    }//GEN-LAST:event_tablaPersonasMouseClicked

    private void btnActualizarPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarPersonaActionPerformed
        if (tablaPersonas.getSelectedRow() != -1) {
            if (validarDatosUpdate() == true) {

                String Nombre = txtNombreUpdate.getText();
                String Apellidos = txtApellidosUpdate.getText();
                int nacimiento = Integer.parseInt(spnNacimientoUpdate.getValue().toString());
                String Telefono = txtTelefonoUpdate.getText();
                boolean registrada = reg;

                int respuesta = JOptionPane.showConfirmDialog(null, "Modificar Vivienda", "Modificar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (respuesta == JOptionPane.YES_OPTION) {
                    BaseDatosUpdate(Nombre, Apellidos, nacimiento, Telefono, registrada);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione Vivienda.");
        }
    }//GEN-LAST:event_btnActualizarPersonaActionPerformed

    private void txtNombreInsertKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreInsertKeyTyped
        int limitador = 25;
        char ch = evt.getKeyChar();
        if ((Character.isDigit(ch)) || (txtNombreInsert.getText().length() >= limitador)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreInsertKeyTyped

    private void txtApellidosInsertKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosInsertKeyTyped
        int limitador = 50;
        char ch = evt.getKeyChar();
        if ((Character.isDigit(ch)) || (txtApellidosInsert.getText().length() >= limitador)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidosInsertKeyTyped

    private void spnNacimientoInsertKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spnNacimientoInsertKeyTyped
        char ch = evt.getKeyChar();
        if ((!Character.isDigit(ch))) {
            evt.consume();
        }
    }//GEN-LAST:event_spnNacimientoInsertKeyTyped

    private void txtTelefonoInsertKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoInsertKeyTyped
        char ch = evt.getKeyChar();
        if ((!Character.isDigit(ch))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoInsertKeyTyped

    private void txtNombreUpdateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUpdateKeyTyped
        int limitador = 25;
        char ch = evt.getKeyChar();
        if ((Character.isDigit(ch)) || (txtNombreUpdate.getText().length() >= limitador)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreUpdateKeyTyped

    private void txtApellidosUpdateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosUpdateKeyTyped
        int limitador = 50;
        char ch = evt.getKeyChar();
        if ((Character.isDigit(ch)) || (txtApellidosUpdate.getText().length() >= limitador)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtApellidosUpdateKeyTyped

    private void spnNacimientoUpdateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spnNacimientoUpdateKeyTyped
        char ch = evt.getKeyChar();
        if ((!Character.isDigit(ch))) {
            evt.consume();
        }
    }//GEN-LAST:event_spnNacimientoUpdateKeyTyped

    private void txtTelefonoUpdateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoUpdateKeyTyped
        char ch = evt.getKeyChar();
        if ((!Character.isDigit(ch))) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoUpdateKeyTyped

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        int limitador = 25;
        char ch = evt.getKeyChar();
        if ((Character.isDigit(ch)) || (txtBuscar.getText().length() >= limitador)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void txtBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBuscarFocusLost
        if ((txtBuscar.getText().length() > 25) || (txtBuscar.getText().length() == 0)) {
            txtBuscar.setBackground(Color.LIGHT_GRAY);
        } else {
            txtBuscar.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtBuscarFocusLost

    private void btnIrGestionViviendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrGestionViviendasActionPerformed
        dispose();
        new ViviendasGestionar(new javax.swing.JFrame(), true).setVisible(true);
    }//GEN-LAST:event_btnIrGestionViviendasActionPerformed

    public boolean validarDatosInsert() {
        boolean correcto = false;

        if (txtNombreInsert.getBackground() == Color.WHITE && txtApellidosInsert.getBackground() == Color.WHITE && txtTelefonoInsert.getBackground() == Color.WHITE) {
            correcto = true;
        }
        if (correcto == false) {
            JOptionPane.showMessageDialog(this, "Hay campos incorrectos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return correcto;
    }

    public boolean validarDatosUpdate() {
        boolean correcto = false;

        if (txtNombreUpdate.getBackground() != (Color.LIGHT_GRAY) && txtApellidosUpdate.getBackground() != (Color.LIGHT_GRAY) && txtTelefonoUpdate.getBackground() != (Color.LIGHT_GRAY)) {
            correcto = true;
        }
        if (correcto == false) {
            JOptionPane.showMessageDialog(this, "Hay campos incorrectos!!!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return correcto;
    }

    //Metodo para insertar el nuevo almacen en la base de datos
    public void BaseDatosINSERT(String nombre, String apellidos, int nacimiento, String telefono, boolean registrada) {

        //Autoincremetamos la ID para que no se repitan
        int IDPersona = Controlador.Metodos.nuevoIDPersona();

        //Creamos el Objeto
        Persona personaINSERT = new Persona(IDPersona, nombre, apellidos, nacimiento, telefono, registrada);

        if (Controlador.Metodos.personaINSERT(personaINSERT)) {

            //Mensaje de confirmación
            JOptionPane.showMessageDialog(this, "Se ha insertado correctamente.");
        } else {
            JOptionPane.showMessageDialog(this, "Error al guardar.");
        }
        cargarTabla();
    }

    public void BaseDatosUpdate(String nombre, String apellidos, int nacimiento, String telefono, boolean registrada) {

        Persona personaUpdate = new Persona(personaSeleccionada.getID_Persona(), nombre, apellidos, nacimiento, telefono, registrada);

        if (Controlador.Metodos.personaUPDATE(personaUpdate)) {
            //Mensaje de confirmación
            JOptionPane.showMessageDialog(this, "Actualizado Correctamente.");
            PersonaGestionar.actualizar = true;
            cargarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Error al editar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void mostrarCamposUpdate() {

        personaSeleccionada = listaTotalPersonas.get(tablaPersonas.getSelectedRow());
        txtNombreUpdate.setText(personaSeleccionada.getNombre());
        txtApellidosUpdate.setText(personaSeleccionada.getApellidos());
        spnNacimientoUpdate.setValue(personaSeleccionada.getAnyoNacimiento());
        txtTelefonoUpdate.setText(personaSeleccionada.getNumTelefono());
        reg = personaSeleccionada.isRegistrada();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarPersona;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertarPersona;
    private javax.swing.JButton btnIrGestionViviendas;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JLabel labelTitulo1;
    private javax.swing.JLabel labelTitulo2;
    private javax.swing.JPanel panelGeneral;
    private javax.swing.JSpinner spnNacimientoInsert;
    private javax.swing.JSpinner spnNacimientoUpdate;
    private javax.swing.JTable tablaPersonas;
    private javax.swing.JTextField txtApellidosInsert;
    private javax.swing.JTextField txtApellidosUpdate;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtNombreInsert;
    private javax.swing.JTextField txtNombreUpdate;
    private javax.swing.JTextField txtTelefonoInsert;
    private javax.swing.JTextField txtTelefonoUpdate;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tableChanged(TableModelEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (!"Windows".equals(info.getName())) {
                } else {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonaGestionar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            PersonaGestionar dialog = new PersonaGestionar(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
}
